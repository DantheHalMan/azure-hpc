{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.1",
  "parameters": {
    "artifactsBaseUrl": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/xpillons/azure-hpc/master/Compute-Grid-Infra/CustomImage",
      "metadata": {
        "description": "Base URL of the solution template gallery package",
        "artifactsBaseUrl": ""
      }
    },
    "uniquePrefix": {
      "type": "string",
      "metadata": {
        "description": "This unique prefix will be used on all the objects created as part of this template."
      }
    },
    "VMSSCount" : {
      "type": "int",
      "metadata": {
        "description": "Number of VM ScaleSets (50 Max)."
      },
      "defaultValue": 1,
      "maxValue": 50
    },
    "computeNodeImage": {
      "type": "string",
      "defaultValue": "CentOS_6.7",
      "allowedValues": [
        "CentOS_6.7",
        "CentOS_7.2",
        "RHEL_7.2",
        "W2012R2"
      ],
      "metadata": {
        "description": "The VM image of the compute nodes"
      }
    },
    "instanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances per Scaleset (20 or less for custom images and overprovisioning)."
      },
      "defaultValue": 2,
      "maxValue": 20
    },
    "xferVMsku": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "allowedValues": [
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2"
      ],
      "metadata": {
        "description": "sku to use only premium disks VMs are allowed"
      }
    },
    "computeVMsku": {
      "type": "string",
      "defaultValue": "Standard_D3_v2",
      "allowedValues": [
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2"
      ],
      "metadata": {
        "description": "sku to use for compute nodes"
      }
    },
    "RGvnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the RG of the virtual network to use."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "description": "SSH rsa public key file as a string."
      }
    },
    "imageLocation": {
      "type": "string",
      "metadata": {
        "description": "URL of the base custom image, in the format of https://accountname.blob.core.windows.net/container/image.vhd."
      }
    },
    "storageAccountKey": {
      "type": "securestring",
      "metadata": {
        "description": "Storage Account key for accessing the base custom image."
      }
    },
    "masterName": {
      "type": "string",
      "metadata": {
        "description": "Name of master VM name"
      }
    }
  },
  "variables": {
    "uniquePrefix": "[toLower(parameters('uniquePrefix'))]",
    "xferVMImage": "Ubuntu_16_10",
    "baseUrl": "[concat(parameters('artifactsBaseUrl'),'/')]",
    "imagePieces": "[split(parameters('imageLocation'),'/')]",
    "imgBlobName": "[variables('imagePieces')[sub(length(variables('imagePieces')),1)]]",
    "transfer-templateUrl": "[concat(variables('baseUrl'), 'transferVM.json')]",
    "nodes-templateUrl": "[concat(variables('baseUrl'), 'nodes-resources.json')]",
    "transferNodeSettings": {
      "VMsku": "[parameters('xferVMsku')]",
      "vnetRG": "[parameters('RGvnetName')]",
      "vnetName": "grid-vnet",
      "subnetName": "computeSubnet"
    },
    "transferNodeOSSettings": {
      "adminUserName": "[parameters('adminUserName')]",
      "sshKeyData": "[parameters('sshKeyData')]",
      "imageReference": "[variables('computeNodeImages')[variables('xferVMImage')]]"
    },
    "computeNodeSettings": {
      "VMsku": "[parameters('computeVMsku')]",
      "vnetRG": "[parameters('RGvnetName')]",
      "vnetName": "grid-vnet",
      "subnetName": "computeSubnet"
    },
    "computeNodeOSSettings": {
      "adminUserName": "[parameters('adminUserName')]",
      "sshKeyData": "[parameters('sshKeyData')]",
      "imageReference": "[variables('computeNodeImages')[parameters('computeNodeImage')]]"
    },
    "computeNodeImages": {
      "CentOS_7.2": {
        "publisher": "OpenLogic",
        "offer": "CentOS",
        "sku": "7.2",
        "version": "latest"
      },
      "Ubuntu_16_10": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "16.10",
        "version": "latest"
      }
    },
    "deploymentApiVersion": "2015-11-01",
    "storageApiVersion": "2015-06-15",
    "storageAccountType": "Premium_LRS"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "comments": "Create one storage account per VMSS",
      "name": "[concat(uniqueString(concat(resourceGroup().id, variables('uniquePrefix'), copyIndex())), variables('uniquePrefix'))]",
      "apiVersion": "[variables('storageApiVersion')]",
      "copy": {
        "name": "storageLoop",
        "count": "[parameters('VMSSCount')]"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "name": "[concat('transfer', variables('uniquePrefix'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('deploymentApiVersion')]",
      "dependsOn": [
        "storageLoop"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('transfer-templateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "uniquePrefix": {
            "value": "[variables('uniquePrefix')]"
          },
          "artifactsBaseUrl": {
            "value": "[parameters('artifactsBaseUrl')]"
          },
          "nodeSettings": {
            "value": "[variables('transferNodeSettings')]"
          },
          "nodeOSSettings": {
            "value": "[variables('transferNodeOSSettings')]"
          },
          "imageLocation": {
            "value": "[parameters('imageLocation')]"
          },
          "storageAccountKey": {
            "value": "[parameters('storageAccountKey')]"
          },
          "saCount": {
            "value": "[parameters('VMSSCount')]"
          }
        }
      }
    },
    {
      "name": "[concat('vmss', variables('uniquePrefix'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('deploymentApiVersion')]",
      "dependsOn": [
        "[concat('transfer', variables('uniquePrefix'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nodes-templateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "uniquePrefix": {
            "value": "[variables('uniquePrefix')]"
          },
          "artifactsBaseUrl": {
            "value": "[parameters('artifactsBaseUrl')]"
          },
          "nodeSettings": {
            "value": "[variables('computeNodeSettings')]"
          },
          "nodeOSSettings": {
            "value": "[variables('computeNodeOSSettings')]"
          },
          "imageLocation": {
            "value": "[parameters('imageLocation')]"
          },
          "VMSSCount": {
            "value": "[parameters('VMSSCount')]"
          },
          "capacity": {
            "value": "[parameters('instanceCount')]"
          },
          "blobName": {
            "value": "[variables('imgBlobName')]"
          }
        }
      }
    }
  ]
}

