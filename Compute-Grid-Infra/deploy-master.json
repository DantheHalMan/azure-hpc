{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "masterImage": {
      "type": "string",
      "defaultValue": "CentOS_6.7",
      "allowedValues": [
        "CentOS_6.7",
        "CentOS_7.0",
        "RHEL_6.7",
        "RHEL_7.2",
        "CentOS_HPC_65",
        "CentOS_HPC_71",
        "W2012R2"
      ],
      "metadata": {
        "description": "The VM image of the compute nodes"
      }
    },
    "vmSSPrefix": {
      "type": "string",
      "metadata": {
        "description": "Base string for naming resources (max length of 8)"
      },
      "maxLength": 8
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password on all VMs."
      }
    }
  },
  "variables": {
    "storageAccountType": "Premium_LRS",
    "location": "[resourceGroup().location]",
    "namingInfix": "[toLower(substring(concat(parameters('vmSSPrefix'), uniqueString(resourceGroup().id)), 0, 9))]",
    "longNamingInfix": "[toLower(parameters('vmSSPrefix'))]",
    "newStorageAccountSuffix": "[concat(variables('longNamingInfix'), 'sa')]",
    "masterBoxName": "[concat(variables('longNamingInfix'), 'master')]",
    "masterBoxSAName": "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), 'masterboxsa')), 'master')]",
    "masterBoxDataSAName": "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), 'masterboxsadiag')), 'data')]",
    "masterBoxOSDiskName": "[concat(variables('masterBoxName'), 'osdisk')]",
    "masterBoxVHDContainerName": "[concat(variables('masterBoxName'), 'vhd')]",
    "masterBoxIPConfigName": "[concat(variables('masterBoxName'), 'ipconfig')]",
    "masterBoxNicName": "[concat(variables('masterBoxName'), 'nic')]",
    "masterBoxVMsku": "Standard_DS3_v2",
    "publicIPAddressName": "[concat(variables('masterBoxName'), 'pip')]",
    "networkSettings": {
      "virtualNetworkName": "grid-vnet",
      "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('networkSettings').virtualNetworkName)]",
      "addressPrefix": "10.0.0.0/20",
      "computeSubnetPrefix": "10.0.0.0/21",
      "infraSubnetPrefix": "10.0.8.0/28",
      "gatewaySubnetPrefix": "10.0.9.0/29",
      "infraSubnetRef": "[concat(variables('networkSettings').vnetID,'/subnets/infraSubnet/')]"
    },

    "computeNodeImages": {
      "CentOS_6.7": {
        "publisher": "OpenLogic",
        "offer": "CentOS",
        "sku": "6.7",
        "version": "latest"
      },
      "CentOS_7.0": {
        "publisher": "OpenLogic",
        "offer": "CentOS",
        "sku": "7.0",
        "version": "latest"
      },
      "CentOS_HPC_65": {
        "publisher": "OpenLogic",
        "offer": "CentOS-HPC",
        "sku": "6.5",
        "version": "latest"
      },
      "CentOS_HPC_71": {
        "publisher": "OpenLogic",
        "offer": "CentOS-HPC",
        "sku": "7.1",
        "version": "latest"
      },
      "SLES_12": {
        "publisher": "SUSE",
        "offer": "SLES",
        "sku": "12",
        "version": "latest"
      },
      "SLES_Premium_12": {
        "publisher": "SUSE",
        "offer": "SLES-Priority",
        "sku": "12",
        "version": "latest"
      },
      "SLES_HPC_12": {
        "publisher": "SUSE",
        "offer": "SLES-HPC",
        "sku": "12",
        "version": "latest"
      },
      "SLES_HPC_Premium_12": {
        "publisher": "SUSE",
        "offer": "SLES-HPC-Priority",
        "sku": "12",
        "version": "latest",
        "os": "Linux"
      },
      "RHEL_6.7": {
        "publisher": "RedHat",
        "offer": "RHEL",
        "sku": "6.7",
        "version": "latest"
      },
      "RHEL_7.2": {
        "publisher": "RedHat",
        "offer": "RHEL",
        "sku": "7.2",
        "version": "latest"
      },
      "W2012R2": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2012-R2-Datacenter",
        "version": "latest"
      }
    },
    "imageReference": "[variables('computeNodeImages')[parameters('masterImage')]]",
    "computeApiVersion": "2016-03-30",
    "networkApiVersion": "2016-03-30",
    "storageApiVersion": "2015-06-15",
    "extensionApiVersion": "2015-06-15",
    "deploymentApiVersion": "2015-01-01",
    "baseTemplateUri": "https://raw.githubusercontent.com/xpillons/azure-hpc/master/Compute-Grid-Infra/",
    "sharedTemplateUrl": "[concat(variables('baseTemplateUri'), 'shared-resources.json')]",
    "masterSetupScript": "master-setup.sh"
  },
  "resources": [
    {
      "name": "shared-resources",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('deploymentApiVersion')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('sharedTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('masterBoxSAName')]",
      "location": "[variables('location')]",
      "apiVersion": "[variables('storageApiVersion')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('masterBoxDataSAName')]",
      "location": "[variables('location')]",
      "apiVersion": "[variables('storageApiVersion')]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "apiVersion": "[variables('networkApiVersion')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('namingInfix')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('masterBoxNicName')]",
      "location": "[variables('location')]",
      "apiVersion": "[variables('networkApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Resources/deployments/', 'shared-resources')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[variables('masterBoxIPConfigName')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('networkSettings').infraSubnetRef]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('masterBoxName')]",
      "location": "[variables('location')]",
      "apiVersion": "[variables('computeApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('masterBoxSAName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('masterBoxDataSAName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('masterBoxNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('masterBoxVMsku')]"
        },
        "osProfile": {
          "computerName": "[variables('masterBoxName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "name": "[variables('masterBoxOSDiskName')]",
            "vhd": {
              "uri": "[concat('http://',variables('masterBoxSAName'),'.blob.core.windows.net/',variables('masterBoxVHDContainerName'),'/',variables('masterBoxOSDiskName'),'.vhd')]"
            },
            "caching": "ReadOnly",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('masterBoxNicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('masterBoxDataSAName'),'.blob.core.windows.net')]"
          }
        }
      },
      "resources": [
        {
          "name": "masterExtension",
          "type": "extensions",
          "location": "[variables('location')]",
          "apiVersion": "[variables('storageApiVersion')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('masterBoxName'))]"
          ],
          "tags": {
            "displayName": "masterExtension"
          },
          "properties": {
            "publisher": "Microsoft.OSTCExtensions",
            "type": "CustomScriptForLinux",
            "typeHandlerVersion": "1.5",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(variables('baseTemplateUri'), variables('masterSetupScript'))]"
              ],
              "commandToExecute": "[concat('sh ', variables('masterSetupScript'), ' -a ', variables('masterBoxDataSAName'), ' -k ', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('masterBoxDataSAName')),variables('storageApiVersion')).key1)]",
              "timestamp": 4,
              "protectedSettings": {
              }
            }
          }
        }
      ]
    }
  ]
}

